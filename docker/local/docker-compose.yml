version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: games_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - vendor_data:/var/www/vendor
      - node_modules_data:/var/www/node_modules
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - games_network
    depends_on:
      - database
      - redis

  nginx:
    image: nginx:alpine
    container_name: games_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - games_network
    depends_on:
      - app

  database:
    image: mysql:8.0
    container_name: games_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: games
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: games_user
    volumes:
      - games_db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - games_network

  redis:
    image: redis:7-alpine
    container_name: games_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - games_network

  reverb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: games_reverb
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan reverb:start --host=0.0.0.0 --port=8080
    ports:
      - "8080:8080"
    volumes:
      - ./:/var/www
      - vendor_data:/var/www/vendor
    networks:
      - games_network
    depends_on:
      - app
      - database
      - redis
    environment:
      - REVERB_HOST=0.0.0.0
      - REVERB_PORT=8080

  vite:
    image: node:20-alpine
    container_name: games_vite
    restart: unless-stopped
    working_dir: /var/www
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www
      - node_modules_data:/var/www/node_modules
    networks:
      - games_network
    depends_on:
      - app
    environment:
      - CHOKIDAR_USEPOLLING=true

networks:
  games_network:
    driver: bridge

volumes:
  games_db_data:
    driver: local
  vendor_data:
    driver: local
  node_modules_data:
    driver: local
